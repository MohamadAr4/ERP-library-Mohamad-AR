import PhFOperations, {
  PhAggregate,
  PhAggregate_None,
  PhAggregate_Count,
  PhAggregate_Sum,
  PhAggregate_Avg,
  PhAggregate_Min,
  PhAggregate_Max,
  PhAggregate_StdDev,
  PhAggregate_Var,
  PhAggregate_Median,
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
} from "../../../operation";

import BaseUrl from "../../../contants";
import {
  PhFC_Autocomplete,
  PhFC_CheckBox,
  PhFC_DatePicker,
  PhFC_Number,
  PhFC_Select,
  PhFC_Text,
} from "../../../operation";

let meta = {
  Generals: {
    title: "دليل المواد",
  },
  isFilter: true,
  isPrintOption: true,
  isDisplayOPtion: false,
  isAggregate: false,
  isOption: true,
  isGroupBy: false,
  displayOptioncardClass: "col-sm-4 order-2",
  printOptionCardCalss: "col-sm-4 order-2 ",
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: {
      URl: `http://localhost:9090/phs/api/CC/Str/ItemMovementsCard`,
      Method: "POST",
    },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "Store",
      element: "fldStorId",
      rElement: "fldStoreName",
      field: "storId",
      rField: "store",
      type: "select",
      dataType: PhFC_Select,
      isForm: false,
      isShown: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Store",
        options: "store",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Item",
      element: "fldItemId",
      rElement: "fldItemName",
      field: "itemId",
      rField: "itemId",
      type: "text",
      dataType: PhFC_Autocomplete,
      isForm: true,
      isShown: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm-2",
        autocomplete: true,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        defValue: "",
        needValue: "storId",
        ValueforAutoComplete: "fldStorId",
        isAutocomplete: true,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "/UC/Str/Items/Autocomplete",
          data_params: "",
        },
        dataType: PhFC_Autocomplete,
        Operation: "Item",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "15",
      },
    },
    {
      label: "Date",
      element: "fldDateId",
      second_element: "fldDateId-second",
      rElement: "fldDateName",
      field: "mstDate",
      rField: "mstDateName",
      type: "date",
      isForm: false,
      isAutocomplete: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: true,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass:
          "form-control form-control-sm ph_datepicker hasDatepicker w-100",
        Operation: "date",
        options: "date",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Number",
      element: "fldNumberId",
      second_element: "fldNumberId-second",
      rElement: "fldNumberName",
      field: "mstNum",
      rField: "mstNumName",
      type: "text",
      isForm: false,
      isAutocomplete: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "num",
        options: "num",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Tran.Type",
      element: "fldTranTypeId",
      rElement: "fldTranTypeName",
      field: "trntypId",
      rField: "trntypName",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Location3",
        options: "aTrnType",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Account",
      element: "fldAccountId",
      rElement: "fldAccountName",
      field: "accFname",
      rField: "accFnameName",
      type: "text",
      isForm: false,
      isAutocomplete: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Text,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "acc",
        options: "acc",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "10",
      },
    },
  ],
  Options: [
    {
      col: 3,
      label: "Open.Balances",
      element: "optOpenBalance",
      field: "openBalance",
      labelClass: "col-sm-9 form-label ph-label text-start pt-2",
      class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
      type: "checkbox",
      value: "",
      checked: true,
      defValue: true,
      dataType: PhFC_CheckBox,
    },
  ],
  PrintOptions: [
    {
      id: "InventoryQuantitiesprtAdd",
      labelClass: "col-sm-2 form-label ph-label text-start text-sm-center pt-2",
      class: "form-control form-control-sm",
      type: "text",
      label: "Add.Title",
      element: "prtAdd",
      field: "title",
      isRequired: false,
      defValue: "",
    },
  ],
};

export { meta };
