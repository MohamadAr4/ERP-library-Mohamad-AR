import PhFOperations, {
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFC_Text,
  PhFC_Select,
  PhFC_Number,
  PhFC_DatePicker,
  PhFC_Autocomplete,
  PhFC_CheckBox,
  PhFC_Radio,
  PhFC_Empty,
} from "../../../../data/operation";

import BaseUrl from "../../../contants";

let meta = {
  hasTable: true,
  hasParent: true,
 
  Generals: {
    title: "دليل المواد",
  },
  URLS: {
    New: { URl: `${BaseUrl}UC/Emp/AdminPunishmentMst/New`, Method: "POST" },
    Update: { URl: `${BaseUrl}UC/Emp/AdminPunishmentMst/`, Method: "PUT" },
    Delete: { URl: `${BaseUrl}UC/Emp/AdminPunishmentMst/`, Method: "DELETE" },
    Search: { URl: `${BaseUrl}UC/Emp/AdminPunishmentMst/Search/`, Method: "POST" },
    Get: { URl: `${BaseUrl}UC/Emp/AdminPunishmentMst/`, Method: "GET" },
  },
  Fields: [
    {
      label: "Number",
      element: "Num",
      rElement: "NumName",
      field: "num",
      rField: "num",
      type: "text",
      dataType: 0,
      isForm: true,
      isShown: true,
      isAutocomplete: false,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "Name",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        divClass: "col-sm-4 px-0",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "1",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Ddate",
      element: "Ddate",
      second_Element : 'Ddate-second',
      field: "ddate",
      rField: "ddateName",
      type: "date",
      dataType: PhFC_DatePicker,
      isForm: true,
      isShown: true,
      hasSecondField : true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        maxDate : '',
        minDate : '',
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: '',
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        divClass: "col-sm-4 px-0",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_DatePicker,
        Operation: "2",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_GT,
        tableWidth: "10",
      },
    },
    {
      label: "Type",
      element: "fldTypeId",
      rElement: "fldTypeName",
      field: "typeId",
      rField: "typeName",
      type: "select",
      dataType: 4,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        options : 'types',
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        divClass: "col-sm-4 px-0",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: true,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 4,
        Operation: "4",
        options : 'types',
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Rem",
      element: "fldRem",
      rElement: "rem",
      field: "rem",
      rField: "rem",
      type: "text",
      dataType: 0,
      isForm: true,
      isShown: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "8",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_ST,
          PhFOper_NE,
          PhFOper_NCT,
          PhFOper_NED,
          PhFOper_NST,
          PhFOper_CT,
          PhFOper_ED,
        ],
        defOperationValue: PhFOper_NCT,
        tableWidth: "10",
      },
    },
    {
      element: "fldId",
      rElement: "fldIdName",
      field: "id",
      rField: "",
      type: "hidden",
      dataType: 0,
      isForm: false,
      isShown: false,
      Form: {
        labelClass: "",
        inputClass: "",
        isAutocomplete: false,
        options: "",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: 0,
        isRequired: false,
      },
      isQuery: false,
      Query: {},
    },
  ],

  Column: [
    {
      title: "id",
      field: "id",
      visible: false,
      type: "hidden",
      component: "input",
      disable: false,
      defValue: "",
      isAutocomplete: false,
    },
    {
      title: "MstId",
      field: "mapunId",
      visible: false,
      type: "hidden",
      component: "input",
      disable: false,
      defValue: 0,
      isAutocomplete: false,
    },
    {
      title: "Employee",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell ph-autocomplete ph-ac-empId empId cell-phTable-PhTable col-phTable-PhTable-3 ui-autocomplete-input",
      type: "text",
      isRequired: true,
      //id: "head-phTable-PhTable-7",
      tabindex: "8",
      field: "empId",
      rfield : 'empName',
      datatype: "integer",
      width: "225px",
      component: "input",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      //footerValue : 0,
      isAutocomplete: true,
      ajaxURL: '/UC/Emp/Employee/Autocomplete',
    },
    {
      title: "Appraisal.Group",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-select form-select-sm  appritmId cell-phTable-PhTable col-phTable-PhTable-5",
      //id: "head-phTable-PhTable-8",
      isRequired: true,
      type: "select",
      tabindex: "9",
      field: "apprgrpId",
      rField : "apprgrpName",
      datatype: "integer",
      width: "225px",
      component: "select",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      //footerValue : 0,
      isAutocomplete: false,
      options : "appGroup",
    },
    {
      title: "Appraisal.Item",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-select form-select-sm  appritmId cell-phTable-PhTable col-phTable-PhTable-5",
      //id: "head-phTable-PhTable-8",
      isRequired: true,
      type: "select",
      tabindex: "9",
      field: "appritmId",
      rField : "appritmName",
      datatype: "integer",
      width: "225px",
      component: "select",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      //footerValue : 0,
      isAutocomplete: false,
      options : "itm",
    },
    {
      title: "Points",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start crdc cell-phTable-PhTable col-phTable-PhTable-8",
      //id: "head-phTable-PhTable-8",
      isRequired: true,
      type: "text",
      tabindex: "9",
      field: "points",
      datatype: "integer",
      width: "225px",
      component: "text",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      //footerValue : 0,
      isAutocomplete: false,
      options : "appItm",
    },
    {
      title: "Month",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start crdc cell-phTable-PhTable col-phTable-PhTable-8",
      //id: "head-phTable-PhTable-8",
      isRequired: true,
      type: "text",
      tabindex: "9",
      field: "days",
      datatype: "integer",
      width: "100px",
      component: "text",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      //footerValue : 0,
      isAutocomplete: false,
      options : "appItm",
    },
    {
      title: "Description",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start crdc cell-phTable-PhTable col-phTable-PhTable-8",
      //id: "head-phTable-PhTable-8",
      isRequired: false,
      type: "text",
      tabindex: "9",
      field: "rem",
      datatype: "string",
      width: "250px",
      component: "text",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      //footerValue : 0,
      isAutocomplete: false,
      options : "appItm",
    },
  ],




};

export { meta };
