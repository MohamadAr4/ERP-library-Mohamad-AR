import PhFOperations, {
  PhAggregate,
  PhAggregate_None,
  PhAggregate_Count,
  PhAggregate_Sum,
  PhAggregate_Avg,
  PhAggregate_Min,
  PhAggregate_Max,
  PhAggregate_StdDev,
  PhAggregate_Var,
  PhAggregate_Median,
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
} from "../../../operation";
import {
  PhFC_DatePicker,
  PhFC_Number,
  PhFC_Select,
  PhFC_Text,
} from "../../../operation";

let aGroup = [
  { id: "storName", name: "Store" },
  { id: "itemFname", name: "Item" },
  { id: "spc1Id", name: "Specification.1" },
  { id: "spc2Id", name: "Specification.2" },
  { id: "spc3Id", name: "Specification.3" },
  { id: "spc4Id", name: "Specification.4" },
  { id: "spc5Id", name: "Specification.5" },
];

let meta = {
  isFilter: true,
  isAggregate: false,
  isDisplayOption: false,
  isPrintOption: true,
  isGroupBy: true,
  displayOptioncardClass: "col-sm-4",
  printOptionCardCalss: "col-sm-4",
  Generals: {
    title: "دليل المواد",
  },
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: {
      URl: "http://localhost:9090/phs/api/CC/Str/InventoryComparison",
      Method: "POST",
    },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "Store",
      element: "fldStorId",
      rElement: "fldStoreName",
      field: "storId",
      rField: "store",
      type: "select",
      dataType: PhFC_Select,
      isForm: false,
      isShown: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        divClass: "col-sm-4 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Store",
        options: "store",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Item",
      element: "fldItemId",
      rElement: "fldNameName",
      field: "itemFname",
      rField: "name",
      type: "text",
      dataType: PhFC_Text,
      isForm: true,
      isShown: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm-2",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Text,
        Operation: "Item",
        aOperations: [
          PhFOper_EQ,
          PhFOper_ST,
          PhFOper_NE,
          PhFOper_NCT,
          PhFOper_NED,
          PhFOper_NST,
          PhFOper_CT,
          PhFOper_ED,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "15",
      },
    },
    {
      label: "date",
      element: "fldDateId",
      second_element: "fldDateId-second",
      rElement: "fldDateName",
      field: "mstDate",
      rField: "mstDateName",
      type: "date",
      dataType: PhFC_DatePicker,
      isForm: false,
      isShown: true,
      hasSecondField: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_DatePicker,
        Operation: "date",
        options: "date",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Number",
      element: "fldNumberId",
      second_element: "fldNumberId-second",
      rElement: "fldNumberName",
      field: "mstNum",
      rField: "mstNumName",
      type: "text",
      dataType: PhFC_Number,
      isForm: false,
      isShown: true,
      hasSecondField: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Number,
        Operation: "num",
        options: "num",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "1",
      element: "fldSpc1Id",
      rElement: "fldSpc1Name",
      field: "spc1Id",
      rField: "spc1Name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Specification1",
        options: "sec1",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "2",
      element: "fldSpc2Id",
      rElement: "fldSpc2Name",
      field: "spc2Id",
      rField: "spc2Name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Specification2",
        options: "sec2",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "3",
      element: "fldSpc3Id",
      rElement: "fldSpc3Name",
      field: "spc3Id",
      rField: "spc3Name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Specification3",
        options: "sec3",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "4",
      element: "fldSpc4Id",
      rElement: "fldSpc4Name",
      field: "spc4Id",
      rField: "spc4Name",
      type: "select",
      dataType: 1,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Specification4",
        options: "sec4",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "5",
      element: "fldSpc5Id",
      rElement: "fldSpc5Name",
      field: "spc5Id",
      rField: "spc5Name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Specification5",
        options: "sec5",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Location.1",
      element: "disLoc1",
      rElement: "disLoc1",
      field: "loc1Id",
      rField: "loc1name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Location1",
        options: "loc1name",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Location.2",
      element: "disLoc2",
      rElement: "disLoc2",
      field: "loc2Id",
      rField: "loc2name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Location2",
        options: "loc2name",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Location.3",
      element: "disLoc3",
      rElement: "disLoc3",
      field: "loc3Id",
      rField: "loc3name",
      type: "select",
      dataType: PhFC_Select,
      isQuery: true,
      isShown: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isRequired: false,
        divClass: "col-sm-4 px-0",
        value1: "",
        value2: "",
        defValue: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "Location3",
        options: "loc3name",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Copm.Date",
      element: "fldCompDate",
      second_element: "fldCompDate-second",
      rElement: "fldCompDateName",
      field: "compDate",
      rField: "compDateName",
      type: "date",
      dataType: PhFC_DatePicker,
      isForm: false,
      isShown: true,
      hasSecondField: true,
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_DatePicker,
        Operation: "comdate",
        options: "comdate",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
  ],
  PrintOptions: [
    {
      id: "InventoryQuantitiesprtAdd",
      labelClass: "col-sm-2 form-label ph-label text-start text-sm-center pt-2",
      class: "form-control form-control-sm",
      type: "text",
      label: "Add.Title",
      element: "prtAdd",
      field: "title",
      isRequired: false,
      defValue: "",
    },
  ],
  GroupBy: [
    {
      id: "Group",
      cardCol: 4,
      visible: true,
      header: { title: "Grouping" },
      body: {
        elementCols: 1,
        fields: {
          label: "Group.by",
          labelCol: 2,
          element: "Grp",
          elementCol: 10,
          field: "grp",
          type: 1,
          options: aGroup,
          isRequired: false,
          groupCount: 3,
        },
      },
    },
  ],
};

export { meta };
