import PhFOperations, {
  PhAggregate,
  PhAggregate_None,
  PhAggregate_Count,
  PhAggregate_Sum,
  PhAggregate_Avg,
  PhAggregate_Min,
  PhAggregate_Max,
  PhAggregate_StdDev,
  PhAggregate_Var,
  PhAggregate_Median,
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFC_Number,
  PhFC_Text,
  PhFC_Select,
  PhFC_DatePicker,
  PhFC_Autocomplete,
} from "../../../../operation";

import BaseUrl from "../../../../contants";

let aGroup = [
  { id: "natName", name: "Nationality" },
  { id: "militaryName", name: "Military" },
  { id: "maritalName", name: "Martial" },
  { id: "langName", name: "Language" },
  { id: "eduName", name: "Education" },
  { id: "statusName", name: "Employee.Status" },
  { id: "levelName", name: "Emp.Level" },
  { id: "jobName", name: "Job" },
  { id: "workshiftName", name: "Working.Shifts" },
  { id: "gradGrpName", name: "gradGrpName" },
  { id: "gradDegreeName", name: "gradDegreeName" },
  { id: "spec1Name", name: "Specification.1" },
  { id: "spec2Name", name: "Specification.2" },
  { id: "spec3Name", name: "Specification.3" },
  { id: "spec4Name", name: "Specification.4" },
  { id: "deptName", name: "Department" },
  { id: "secName", name: "Section" },
  { id: "genderName", name: "Gender" },
];

let meta = {
  isFilter: true,
  isAggregate: false,
  isDisplayOPtion: false,
  isPrintOption: false,
  isGroupBy: true,
  displayOptioncardClass: "col-sm-8 order-1 mx-auto pt-2",
  Generals: {
    title: "Employee Card",
  },
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: {
      URl: `${BaseUrl}UC/Emp/EmployeeStatistics/Query`,
      Method: "POST",
    },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "Number",
      element: "fldNumber",
      second_element: "fldNumber-second",
      rElement: "fldNumberName",
      field: "num",
      rField: "numName",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "empNum",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "15",
      },
    },
    {
      label: "ID.Number",
      element: "fldNnum",
      second_element: "fldNnum-second",
      rElement: "fldNumberName",
      field: "nnum",
      rField: "nnumName",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "idNnum",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "15",
      },
    },
    {
      label: "Insurance.Num",
      element: "fldInum",
      second_element: "fldInum-second",
      rElement: "fldInumName",
      field: "inum",
      rField: "inumName",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "empInum",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "15",
      },
    },
    {
      label: "Name",
      element: "fldName",
      rElement: "fldEmployeeName",
      field: "name",
      rField: "name",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Text,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "name",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "10",
      },
    },
    {
      label: "Father",
      element: "fldFather",
      // second_element: "fldFather-second",
      rElement: "fldFatherName",
      field: "father",
      rField: "father",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Text,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "fatherName",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "10",
      },
    },
    {
      label: "Mother",
      element: "fldMother",
      // second_element: "fldMother-second",
      rElement: "fldMotherName",
      field: "mother",
      rField: "mother",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Text,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "motherName",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "10",
      },
    },
    {
      label: "Rem",
      element: "fldRem",
      // second_element: "fldVachours-second",
      rElement: "fldRemName",
      field: "rem",
      rField: "rem",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Text,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "rem",
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "10",
      },
    },
    {
      label: "Gender",
      element: "fldGenderId",
      rElement: "fldGenderName",
      field: "genderId",
      rField: "genderName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "gender",
        options: "gender",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Nationality",
      element: "fldNatId",
      rElement: "fldNatName",
      field: "natId",
      rField: "natName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "nat",
        options: "nat",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Military",
      element: "fldMilitaryId",
      rElement: "fldMilitaryName",
      field: "militaryId",
      rField: "militaryName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "militry",
        options: "militry",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Martial",
      element: "fldMaritalId",
      rElement: "fldMaritalName",
      field: "martialId",
      rField: "natName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "mat",
        options: "mat",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Date.of.birth",
      element: "fldDbirth",
      second_element: "fldDbirth-second",
      rElement: "fldDbirthName",
      field: "trndbirth",
      rField: "trndbirth",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "birthDate",
        options: "birthDate",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Language",
      element: "fldLangId",
      rElement: "fldLangName",
      field: "langId",
      rField: "langName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "lang",
        options: "lang",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Education",
      element: "fldEducatId",
      rElement: "fldEducatName",
      field: "educatId",
      rField: "educatName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "edu",
        options: "edu",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "username",
      element: "fldUser",
      rElement: "fldUserName",
      field: "userFname",
      rField: "userFnameName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Autocomplete,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        Operation: "username",
        autocomplete: {
          data_label: "Employee",
          data_acrel: "",
          data_acoperation: "/UC/Cpy/Users/Autocomplete",
          data_params: "acParams",
        },
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Manager",
      element: "fldManager",
      rElement: "fldManagerName",
      field: "ManagerFname",
      rField: "ManagerFnameName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Autocomplete,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        Operation: "manager",
        autocomplete: {
          data_label: "Employee",
          data_acrel: "",
          data_acoperation: "/UC/Emp/Employee/Autocomplete",
          data_params: "acParams",
        },
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Director",
      element: "fldDirector",
      rElement: "fldDirectorName",
      field: "directorFname",
      rField: "directorFnameName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Autocomplete,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        Operation: "dirc",
        autocomplete: {
          data_label: "Employee",
          data_acrel: "",
          data_acoperation: "/UC/Emp/Employee/Autocomplete",
          data_params: "acParams",
        },
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Coun.Start.Date",
      element: "fldCsdate",
      second_element: "fldCsdate-second",
      rElement: "fldCsdateName",
      field: "trncsdate",
      rField: "trncsdateName",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "counsbirth",
        options: "counsbirth",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Coun.End.Date",
      element: "fldCedate",
      second_element: "fldCedate-second",
      rElement: "fldCedateName",
      field: "trncedate",
      rField: "trncedate",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "counebirth",
        options: "counebirth",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Work.Start.Date",
      element: "fldSdate",
      second_element: "fldSdate-second",
      rElement: "fldSdateName",
      field: "trnsdate",
      rField: "trnsdate",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "worksDate",
        // options: "worksDate",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Work.End.Date",
      element: "fldEdate",
      second_element: "fldEdate-second",
      rElement: "fldEdateName",
      field: "trnedate",
      rField: "trnedate",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "workeDate",
        // options: "workeDate",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_BT],
        defOperationValue: PhFOper_BT,
        tableWidth: "10",
      },
    },
    {
      label: "Working.Shift",
      element: "fldWgrpId",
      rElement: "fldWgrpName",
      field: "workshiftId",
      rField: "workshiftName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "shiftStatus",
        options: "shiftStatus",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Department",
      element: "fldDeptId",
      rElement: "fldDeptName",
      field: "deptId",
      rField: "deptName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "dep",
        options: "dep",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Section",
      element: "fldSectId",
      rElement: "fldSectName",
      field: "sectId",
      rField: "sectName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec",
        options: "sec",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Emp.Level",
      element: "fldLevelId",
      rElement: "fldLevelName",
      field: "levelId",
      rField: "levelName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "emplvl",
        options: "emplvl",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Job",
      element: "fldJobId",
      rElement: "fldJobName",
      field: "jobId",
      rField: "jobName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "jobs",
        options: "jobs",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "1",
      element: "fldSpc1Id",
      rElement: "fldSpc1Name",
      field: "spc1Id",
      rField: "spc1Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec1",
        options: "sec1",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "2",
      element: "fldSpc2Id",
      rElement: "fldSpc2Name",
      field: "spc2Id",
      rField: "spc2Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec2",
        options: "sec2",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "3",
      element: "fldSpc3Id",
      rElement: "fldSpc3Name",
      field: "spc3Id",
      rField: "spc3Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec3",
        options: "sec3",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "4",
      element: "fldSpc4Id",
      rElement: "fldSpc4Name",
      field: "spc4Id",
      rField: "spc4Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec4",
        options: "sec4",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Employee.Status",
      element: "fldStatusId",
      rElement: "fldStatusName",
      field: "statusId",
      rField: "statusName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "employeeStatus",
        options: "employeeStatus",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },

    
    
    {
      label: "Tgrad",
      element: "fldTgradId",
      rElement: "fldTgradName",
      field: "gradDegreeName",
      rField: "gradDegreeName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "tgrand",
        options: "tgrand",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Grad.Start.Date",
      element: "fldGradsdate",
      second_element: "fldGradsdate-second",
      rElement: "fldGradsdateName",
      field: "trngradsdate",
      rField: "trngradsdate",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "gradsdate",
        // options: "workeDate",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_GT,
        tableWidth: "10",
      },
    },
    {
      label: "Grad.Days",
      element: "fldGradcons",
      second_element: "fldGradcons-second",
      rElement: "fldGradconsName",
      field: "graddays",
      rField: "gradconsName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "gradDay",
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Grad.Cons",
      element: "fldGradcons",
      second_element: "fldGradcons-second",
      rElement: "fldGradconsName",
      field: "gradcons",
      rField: "gradconsName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "gradCons",
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Grad.Puns",
      element: "fldgrandPuns",
      second_element: "fldgrandPuns-second",
      rElement: "fldGrandPunsName",
      field: "gradpuns",
      rField: "gradpunsName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "gradPuns",
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "vacation.days",
      element: "fldVacdays",
      second_element: "fldVacdays-second",
      rElement: "fldVacdaysName",
      field: "vacdays",
      rField: "vacdaysName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "vacDay",
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "vacation.hours",
      element: "fldVachours",
      second_element: "fldVachours-second",
      rElement: "fldVachoursName",
      field: "vachours",
      rField: "vachoursName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "vacHours",
        // options: "appraisalNote",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
  ],
  PrintOptions: [],
  Aggregation: [],
  GroupBy: [
    {
      id: "Group",
      cardCol: 4,
      visible: true,
      header: { title: "Grouping" },
      body: {
        elementCols: 1,
        fields: {
          label: "Group.by",
          labelCol: 2,
          element: "Grp",
          elementCol: 10,
          field: "grp",
          type: 1,
          options: aGroup,
          isRequired: false,
          groupCount: 3,
        },
      },
    },
  ],
};

export { meta };
