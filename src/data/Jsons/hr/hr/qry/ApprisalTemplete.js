import PhFOperations, {
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFC_Number,
  PhFC_Select,
  PhFC_CheckBox,
} from "../../../../operation";

import BaseUrl from "../../../../contants";



let meta = {
  isFilter: true,
  isAggregate: false,
  isDisplayOPtion: true,
  isPrintOption: false,
  isGroupBy: false,
  displayOptioncardClass: "col-sm-8 order-1 mx-auto pt-2",
  Generals: {
    title: "Appraisal Note",
  },
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: { URl: `${BaseUrl}UC/Emp/AppraisalTemplates/Query`, Method: "POST" },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "Number",
      element: "fldNumber",
      second_element: "fldNumber-second",
      rElement: "fldNumberName",
      field: "tmpltNum",
      rField: "num",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "number",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "15",
      },
    },
    {
      label: "Points",
      element: "fldPoint",
      rElement: "eapprPoints",
      field: "tmpltPoint",
      rField: "pointsName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown: true,
      Query: {
        isAutocomplete: false,
        isRequired: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "Points",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Appraisal.Group",
      element: "fldApprgrpId",
      rElement: "fldApprgrpName",
      field: "agrpId",
      rField: "agrpName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "appGroup",
        options: "appGroup",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Appraisal.Item",
      element: "fldAppritmId",
      rElement: "fldAppritmName",
      field: "aitmId",
      rField: "aitmName",
      type: "select",
      isForm: false,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "itms",
        options: "itm",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Templet",
      element: "fldTempId",
      rElement: "fldTempName",
      field: "tmpltmId",
      rField: "tmpltmName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "templete",
        options: "templete",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
  ],
  DisplayOption: [
    {
      label: "Number",
      element: "disNumber",
      field: "tmpltNum",
      labelClass: "col-sm-9 form-label ph-label text-start pt-2",
      class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
      type: "checkbox",
      value: "",
      checked: true,
      defValue: true,
      dataType: PhFC_CheckBox,
    },
    {
      label: "Remark",
      element: "disRemName",
      field: "tmpltmRem",
      labelClass: "col-sm-9 form-label ph-label text-start pt-2",
      class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
      type: "checkbox",
      value: "",
      checked: true,
      defValue: true,
      dataType: PhFC_CheckBox,
    },
    {
      label: "Description",
      element: "disDiscName",
      field: "tmplttRem",
      labelClass: "col-sm-9 form-label ph-label text-start pt-2",
      class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
      type: "checkbox",
      value: "",
      checked: false,
      defValue: false,
      dataType: PhFC_CheckBox,
    },
  ],
  PrintOptions: [],
  Aggregation: [],
  GroupBy: [],
};

export { meta };
