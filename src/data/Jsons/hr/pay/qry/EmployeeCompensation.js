import PhFOperations, {
  PhAggregate,
  PhAggregate_None,
  PhAggregate_Count,
  PhAggregate_Sum,
  PhAggregate_Avg,
  PhAggregate_Min,
  PhAggregate_Max,
  PhAggregate_StdDev,
  PhAggregate_Var,
  PhAggregate_Median,
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFC_Number,
  PhFC_Autocomplete,
  PhFC_DatePicker,
  PhFC_Select,
  PhFC_CheckBox,
} from "../../../../operation";

import BaseUrl from "../../../../contants";

let meta = {
  isFilter: true,
  isAggregate: false,
  isDisplayOPtion: true,
  isPrintOption: false,
  isGroupBy: false,
  displayOptionCardClass: "",
  Generals: {
    title: "Add To Salary",
  },
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: {
      URl: `${BaseUrl}UC/Emp/EmployeeCompensation/Query`,
      Method: "POST",
    },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "compName",
      element: "fldCompFname",
      rElement: "fldCompFName",
      field: "compId",
      rField: "compName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Autocomplete,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        Operation: "1",
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "/UC/Emp/Compensation/Autocomplete", // AutoComplete url
          data_params: "",
        },
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Employee",
      element: "fldEmpFname",
      rElement: "fldEmpFName",
      field: "empId",
      rField: "empName",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: true,
        dataType: PhFC_Autocomplete,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        Operation: "1",
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "/UC/Emp/Employee/Autocomplete", // AutoComplete url
          data_params: "",
        },
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "S.date",
      element: "fldSdate",
      second_element: "fldSdate-second", //if the field does not have second field this key must be removed
      rElement: "fldSdateeName",
      field: "loanSdate",
      rField: "loanSdate",
      type: "date",
      isForm: true,
      isQuery: true,
      hasSecondField: true, //if the field does not have second field (false)
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "", //if it doesnt have second field "col-sm-4 px-0"
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "loanSdatea", //must be unique
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_GT,
        tableWidth: "10",
      },
    },
    {
      label: "E.date",
      element: "fldEdate",
      second_element: "fldEdate-second", //if the field does not have second field this key must be removed
      rElement: "fldEdateName",
      field: "loanEdate",
      rField: "loanEdate",
      type: "date",
      isForm: true,
      isQuery: true,
      hasSecondField: true, //if the field does not have second field (false)
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_DatePicker,
        divClass: "", //if it doesnt have second field "col-sm-4 px-0"
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "loanEdateww", //must be unique
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_GT,
        tableWidth: "10",
      },
    },
    {
      label: "Status",
      element: "fldStatusId",
      rElement: "fldStatusName",
      field: "statusId",
      rField: "statusName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixStatus",
        options: "status",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: [PhFOper_EQ],
        tableWidth: "10",
      },
    },
    {
      label: "ecompPamt",
      element: "fldEcompPamt",
      second_element: "fldEcompPamt-second", //if the field does not have second field this key must be removed
      rElement: "fldEcompPamtName",
      field: "ecompPamt",
      rField: "ecompPamtName",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true, //if the field does not have second field (false)
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0", //if it doesnt have second field "col-sm-4 px-0"
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "3", //must be unique
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "15",
      },
    },
    {
      label: "comtypeName",
      element: "fldComtypeName",
      rElement: "fldComtypename",
      field: "comtypeName",
      rField: "comtypeNamename",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "4",
        options: "comtype",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: [PhFOper_EQ],
        tableWidth: "10",
      },
    },
    {
      label: "taxbrktName",
      element: "fldTaxbrktName",
      rElement: "fldTaxbrktname",
      field: "taxbrktId",
      rField: "taxbrktName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "5",
        options: "brkt",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: [PhFOper_EQ],
        tableWidth: "10",
      },
    },
    {
      label: "Amount.Type",
      element: "fldAmttypeId",
      rElement: "fldAmttypeName",
      field: "amttypeId",
      rField: "amttypeName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "6",
        options: "AmtType",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: [PhFOper_EQ],
        tableWidth: "10",
      },
    },
    {
      label: "compPamt",
      element: "fldCompPamt",
      second_element: "fldCompPamt-second", //if the field does not have second field this key must be removed
      rElement: "fldCompPamtName",
      field: "compPamt",
      rField: "compPamtName",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true, //if the field does not have second field (false)
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Number,
        divClass: "col-sm-2 px-0", //if it doesnt have second field "col-sm-4 px-0"
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "6", //must be unique
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue: PhFOper_CT,
        tableWidth: "15",
      },
    },
    {
      label: "Section",
      element: "fldSectId",
      rElement: "fldSectName",
      field: "sectId",
      rField: "sectName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec",
        options: "sec",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Department",
      element: "fldDeptId",
      rElement: "fldDeptName",
      field: "deptId",
      rField: "deptName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "dep",
        options: "dep",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Job",
      element: "fldJobId",
      rElement: "fldJobName",
      field: "jobId",
      rField: "jobName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "jobs",
        options: "jobs",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Level",
      element: "fldLevelId",
      rElement: "fldLevelName",
      field: "levelId",
      rField: "levelName",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "emplvl",
        options: "lvl",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "1",
      element: "fldSpc1Id",
      rElement: "fldSpc1Name",
      field: "spec1Id",
      rField: "spec1Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec1",
        options: "sec1",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "2",
      element: "fldSpc2Id",
      rElement: "fldSpc2Name",
      field: "spec2Id",
      rField: "spec2Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec2",
        options: "sec2",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "3",
      element: "fldSpc3Id",
      rElement: "fldSpc3Name",
      field: "spec3Id",
      rField: "spec3Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec3",
        options: "sec3",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "4",
      element: "fldSpc4Id",
      rElement: "fldSpc4Name",
      field: "spec4Id",
      rField: "spec4Name",
      type: "select",
      isQuery: true,
      isShown: true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: PhFC_Select,
        divClass: "col-sm-4 px-0",
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec4",
        options: "sec4",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
  ],
  DisplayOption: [ 
  {
    label: "taxbrktName",
    element: "disTaxbrktName",
    field: "taxbrktName",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: true,
    defValue: true,
    dataType: PhFC_CheckBox,
  },
  {
    label: "Job",
    element: "disJobName",
    field: "jobName",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: true,
    defValue: true,
    dataType: PhFC_CheckBox,
  },
  {
    label: "Department",
    element: "disDeptName",
    field: "deptName",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: true,
    defValue: true,
    dataType: PhFC_CheckBox,
  },
  {
    label: "Section",
    element: "disSectName",
    field: "sectName",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },
  {
    label: "Level",
    element: "disLevelName",
    field: "levelName",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },
  {
    label: "spcification.1",
    element: "disspcification1",
    field: "spc1Name",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },
  {
    label: "spcification.2",
    element: "disspcification2",
    field: "spc2Name",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },
  {
    label: "spcification.3",
    element: "disspcification3",
    field: "spc3Name",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },
  {
    label: "spcification.4",
    element: "disspcification4",
    field: "spc4Name",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },
  {
    label: "rem",
    element: "disRem",
    field: "remName",
    labelClass: "col-sm-9 form-label ph-label text-start pt-2",
    class: "form-check-input border-secondary mx-1 mb-1 all-Display-Option",
    type: "checkbox",
    value: "",
    checked: false,
    defValue: false,
    dataType: PhFC_CheckBox,
  },],

};

export { meta };
