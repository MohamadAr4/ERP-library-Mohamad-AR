import PhFOperations, {
  PhAggregate,
  PhAggregate_None,
  PhAggregate_Count,
  PhAggregate_Sum,
  PhAggregate_Avg,
  PhAggregate_Min,
  PhAggregate_Max,
  PhAggregate_StdDev,
  PhAggregate_Var,
  PhAggregate_Median,
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
} from "../../../../operation";

let aGroup = [
  {id: 'fixdName', name: ('Asset.Name')},
  {id: 'fixdNum', name: ('Asset.Number')},
  {id: 'fixdSpc1Name', name: ('Fix.Spec.1')},
  {id: 'fixdSpc2Name', name: ('Fix.Spec.2')},
  {id: 'fixdSpc3Name', name: ('Fix.Spec.3')},
  {id: 'fixdSpc4Name', name: ('Fix.Spec.4')},
  {id: 'fixdSpc5Name', name: ('Fix.Spec.5')},
  {id: 'statusName', name: ('Fix.Status')},
  {id: 'loc1Name', name: ('Location.1')},
  {id: 'loc2Name', name: ('Location.2')},
  {id: 'loc3Name', name: ('Location.3')},
  {id: 'spc1Name', name: ('Specification.1')},
  {id: 'spc2Name', name: ('Specification.2')},
  {id: 'spc3Name', name: ('Specification.3')},
  {id: 'spc4Name', name: ('Specification.4')},
  {id: 'spc5Name', name: ('Specification.5')}];

let aAggregation = [
  {
    id: "0",
    filed: "totFamtDeprication",
    name: "totFamtDeprication",
    aPhAggregate : [PhAggregate_Sum, PhAggregate_Avg],
  },
  {
    id: "1",
    filed: "trnAmt",
    name: "Amount",
    aPhAggregate:[PhAggregate_Sum, PhAggregate_Avg],
  },
  {
    id: "2",
    filed: "totAmt",
    name: "trnBookqnt",
    aPhAggregate: [PhAggregate_Max, PhAggregate_Max],
  },
];

let meta = {
  isFilter : true,
  isAggregate : true,
  isDisplayOption : false ,
  isPrintOption : true,
  isGroupBy : true,
  Generals: {
    title: "دليل المواد",
  },
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: { URl: "http://localhost:9090/smb/api/UC/Fix/TotalFixedAmounts/Statistics", Method: "POST" },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "Date",
      element: "fldDate",
      second_element: "fldDate-second",
      rElement: "fldDateName",
      field: "mstDate",
      rField: "Date",
      type: "date",
      isForm: true,
      isAutocomplete: false,
      isQuery: true,
      hasSecondField: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 3,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "date",
        options: "date",            
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue:[PhFOper_GT],
        tableWidth: "10",
      },
    },
    {
      label: "Number",
      element: "fldNum",
      second_element: "fldNum-second",
      rElement: "fldNumName",
      field: "mstNum",
      rField: "num",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "number",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue:[PhFOper_EQ],
        tableWidth: "15",
      },
    },
    {
      label: "Serial",
      element: "fldTrn",
      second_element: "fldTrn-second",
      rElement: "fldTrnName",
      field: "trnId",
      rField: "trnName",
      type: "text",
      isForm: false,
      isQuery: true,
      hasSecondField: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "serial",
        options: "serial",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue:[PhFOper_EQ],
        tableWidth: "10",
      },
    },
    {
      label: "Asset",
      element: "fldAsset",
      rElement: "fldAssetName",
      field: "fixdFname",
      rField: "fixdFname",
      type: "text",
      isForm: true,
      isQuery: true,
      hasSecondField: false,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        Operation: "assest",
        options: "Assest",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue:[PhFOper_CT],
        tableWidth: "10",
      },
    },
    {
      label: "Fix.Status",
      element: "fldStatusId",
      rElement: "fldStatusName",
      field: "statusId",
      rField: "statusName",
      type: "select",
      isQuery: true,
      hasSecondField: false,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixStatus",
        options: "fixStatus",        
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "S.Date",
      element: "fldSDateId",
      second_element: "fldSDateId-second",
      rElement: "fldSDateName",
      field: "trnSdate",
      rField: "SDate",
      type: "date",
      isForm: false,
      isQuery: true,
      hasSecondField: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 3,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "sDate",
        options: "sdate",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue:[PhFOper_GT],
        tableWidth: "10",
      },
    },
    {
      label: "E.Date",
      element: "fldEDateId",
      second_element: "fldEDateId-second",
      rElement: "fldEDateName",
      field: "trnEdate",
      rField: "EDate",
      type: "date",
      isForm: true,
      isQuery: true,
      hasSecondField: true,
      isShown : true,
      Query: {
        isAutocomplete: false,
        isRequired: false,
        dataType: 3,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ph_datepicker hasDatepicker",
        Operation: "eDate",
        options: "Edate",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue:[PhFOper_GT],
        
        tableWidth: "10",
      },
    },
    {
      label: "Fix Spec" + "1",
      element: "fldFixSpec1Id",
      rElement: "fldFixSpec1Name",
      field: "fixdSpc1Id",
      rField: "fixSpec1Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixSec1",
        options: "fixSec1",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Fix Spec" + "2",
      element: "fldFixSpec2Id",
      rElement: "fldFixSpec2Name",
      field: "fixdSpc2Id",
      rField: "fixSpec2Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixSec2",
        options: "fixSec2",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Fix Spec" + "3",
      element: "fldFixSpec3Id",
      rElement: "fldFixSpec3Name",
      field: "fixdSpc3Id",
      rField: "fixSpec3Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixSec3",
        options: "fixSec3",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Fix Spec" + "4",
      element: "fldFixSpec4Id",
      rElement: "fldFixSpec4Name",
      field: "fixdSpc4Id",
      rField: "fixSpec4Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixSec4",
        options: "fixSec4",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Fix Spec" + "5",
      element: "fldFixSpec5Id",
      rElement: "fldFixSpec5Name",
      field: "fixdSpc5Id",
      rField: "fixSpec5Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "fixSec5",
        options: "fixSec5",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "1",
      element: "fldSpc1Id",
      rElement: "fldSpc1Name",
      field: "spc1Id",
      rField: "spc1Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec1",
        options: "sec1",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "2",
      element: "fldSpc2Id",
      rElement: "fldSpc2Name",
      field: "spc2Id",
      rField: "spc2Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec2",
        options: "sec2",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "3",
      element: "fldSpc3Id",
      rElement: "fldSpc3Name",
      field: "spc3Id",
      rField: "spc3Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec3",
        options: "sec3",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "4",
      element: "fldSpc4Id",
      rElement: "fldSpc4Name",
      field: "spc4Id",
      rField: "spc4Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec4",
        options: "sec4",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "5",
      element: "fldSpc5Id",
      rElement: "fldSpc5Name",
      field: "spc5Id",
      rField: "spc5Name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "sec5",
        options: "sec5",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Specification" + "6",
      element: "fldSpc6Id",
      rElement: "fldSpc6Name",
      field: "spc6Id",
      rField: "spc6Name",
      type: "text",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        Operation: "sec6",
        options: "sec6",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue:[PhFOper_CT],
        tableWidth: "10",
      },
    },
    {
      label: "Location.1",
      element: "disLoc1",
      rElement: "disLoc1",
      field: "loc1name",
      rField: "loc1name",
      type: "select",
      isQuery: true,
      isShown : true,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "loc1name",
        options: "loc1name",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],
        tableWidth: "10",
      },
    },
    {
      label: "Location.2",
      element: "disLoc2",
      rElement: "disLoc2",
      field: "loc2name",
      rField: "loc2name",
      type: "select",
      isQuery: true,
      isShown : false,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "loc2name",
        options: "loc2name",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
    {
      label: "Location.3",
      element: "disLoc3",
      rElement: "disLoc3",
      field: "loc3name",
      rField: "loc3name",
      type: "select",
      isQuery: true,
      isShown : false,
      Query: {
        isRequired: false,
        isAutocomplete: false,
        dataType: 0,
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        Operation: "loc3name",
        options: "loc3name",
        value1: "",
        value2: "",
        defValue: "",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue:[PhFOper_EQ],

        tableWidth: "10",
      },
    },
  ],
  DisplayOption: [],
  PrintOptions: [
    {
      id: "InventoryQuantitiesprtAdd",
      labelClass: "col-sm-2 form-label ph-label text-start text-sm-center pt-2",
      class: "form-control form-control-sm",
      type: "text",
      label: "Add.Title",
      element: "prtAdd",
      field: "title",
      isRequired: false,
      defValue: "",
    },
  ],
  Aggregation: [
    {
      id: "Aggregation",
      Fields: [
        {
          label: "Aggregation",
          labelCol: 2,
          element: "Aggr",
          elementCol: 10,
          field: "Aggr",
          type: 'select',
          isRequired: true,
          aggregationCount: 1,
          Operation: '',
          options: [
            {
              id: "0",
              filed: "totFamtDeprication",
              name: "totFamtDeprication",
              aPhAggregate : [PhAggregate_Sum, PhAggregate_Avg],
            },
            {
              id: "1",
              filed: "trnAmt",
              name: "Amount",
              aPhAggregate:[PhAggregate_Sum, PhAggregate_Avg],
            },
            {
              id: "2",
              filed: "totAmt",
              name: "trnBookqnt",
              aPhAggregate: [PhAggregate_Sum, PhAggregate_Max],
            },
          ],
          defValue: ["totFamtDeprication"],
        },
      ],
    },
  ],
  GroupBy:[
    {
      id: "Group",
      cardCol: 4,
      visible: true,
      header: {title: "Grouping"},
      body: {
        elementCols: 1,
        fields: {
          label: 'Group.by', labelCol: 2,
          element: 'Grp', elementCol: 10,
          field: 'grp', 
          type:1,
          options : aGroup,
          isRequired: false, groupCount: 3,
        }}}
  ]
};

export { meta , aAggregation};
