import PhFOperations, {
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFC_Select,
  PhFC_Autocomplete,
  PhFC_Text,
  PhFC_Number,
} from "../../../../data/operation";
import BaseUrl from "../../../../data/contants";

let meta = {
  hasTable: false,//entry form
  hasParent: true,
  id: '12000313',
  Generals: {
    title: "دليل المواد",
    errorMessage : 'must be (Min < Request < Max)'
  },
  URLS: {
    New: {
      URl: `${BaseUrl}UC/Str/StoresMateriales/New`,
      Method: "POST",
    },
    Update: {
      URl: `${BaseUrl}UC/Str/StoresMateriales/`,
      Method: "PUT",
    },
    Delete: {
      URl: `${BaseUrl}UC/Str/StoresMateriales/`,
      Method: "DELETE",
    },
    Search: {
      URl: `${BaseUrl}UC/Str/StoresMateriales/Search/`,
      Method: "POST",
    },
    Get: {
      URl: `${BaseUrl}UC/Str/StoresMateriales/`,
      Method: "GET",
    },
  },
  Fields: [
    {
      label: "Store",
      element: "fldStorId",
      rElement: "fldStorName",
      field: "storId",
      rField: "storName",
      type: "select",
      dataType: PhFC_Select,
      isForm: true,
      isShown: true,
      isAutocomplete: false,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "Name",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        options: "store",
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "1",
        options: "store",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Item",
      element: "fldItemId",
      rElement: "fldItemName",
      field: "itemId",
      rField: "itemName",
      type: "text",
      dataType: PhFC_Autocomplete,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        isAutocomplete: true,
        needValue: "storId",
        ValueforAutoComplete: "fldStorId",
        options: "status",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "/UC/Str/ItemsNotInStore/Autocomplete",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm phAutocomplete",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: true,
        autocomplete: {
          data_acrel: "",
          data_acoperation:
            "/UC/Str/ItemsNotInStore/Autocomplete",
          data_params: "",
        },
        dataType: PhFC_Autocomplete,
        Operation: "2",
        options: "status", // we need to remmeber it
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "الحالة",
      element: "fldStatusId",
      field: "statusId",
      rField: "statusName",
      type: "select",
      dataType: PhFC_Select,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm ",
        isAutocomplete: false,
        options: "status",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: 1,
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "3",
        options: "status", // we need to remmeber it
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Location" + "1",
      element: "fldLoc1Id",
      rElement: "fldLoc1Name",
      field: "loc1Id",
      rField: "loc1Name",
      type: "select",
      dataType: PhFC_Select,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm ",
        isAutocomplete: false,
        options: "loc1",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "4",
        options: "loc1", // we need to remmeber it
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Location" + "2",
      element: "fldLoc2Id",
      rElement: "fldLoc2Name",
      field: "loc2Id",
      rField: "loc2Name",
      type: "select",
      dataType: PhFC_Select,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm ",
        isAutocomplete: false,
        options: "loc2",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "5",
        options: "loc2", // we need to remmeber it
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Location" + "3",
      element: "fldLoc3Id",
      rElement: "fldLoc3Name",
      field: "loc3Id",
      rField: "loc3Name",
      type: "select",
      dataType: PhFC_Select,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm ",
        isAutocomplete: false,
        options: "loc3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        divClass: "col-sm-4 px-0",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Select,
        Operation: "6",
        options: "loc3", // we need to remmeber it
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Min",
      element: "fldMinLimit",
      second_element : 'fldMinLimit-second',
      rElement: "fldMinLimitName",
      field: "minLimit",
      rField: "minLimitName",
      type: "text",
      dataType: PhFC_Number,
      isForm: true,
      isShown: true,
      hasSecondField: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Number,
        Operation: "Min",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Request",
      element: "fldReqLimit",
      second_element : 'fldReqLimit-second',
      rElement: "fldReqLimitName",
      field: "reqLimit",
      rField: "reqLimitName",
      type: "text",
      dataType: PhFC_Number,
      isForm: true,
      isShown: true,
      hasSecondField: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Number,
        Operation: "Request",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Max",
      element: "fldMaxLimit",
      second_element : 'fldMaxLimit-second',
      rElement: "fldMaxLimitName",
      field: "maxLimit",
      rField: "maxLimit",
      type: "text",
      dataType: PhFC_Number,
      isForm: true,
      isShown: true,
      hasSecondField: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Number,
        Operation: "Max",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Quantity",
      element: "fldCQnt",
      second_element : 'fldCQnt-second',
      rElement: "fldCQntName",
      field: "cqnt",
      rField: "cqntName",
      type: "text",
      dataType: PhFC_Number,
      isForm: false,
      isShown: true,
      hasSecondField: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Number,
        Operation: "Quantity",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Amount",
      element: "fldCAmt",
      second_element : 'fldCAmt-second',
      rElement: "fldCAmtName",
      field: "camt",
      rField: "camtName",
      type: "text",
      dataType: PhFC_Number,
      isForm: false,
      isShown: true,
      hasSecondField: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        divClass: "col-sm-2 px-0",
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Number,
        Operation: "Amount",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      element: "fldId",
      rElement: "fldIdName",
      field: "id",
      rField: "",
      type: "hidden",
      dataType: 0,
      isForm: false,
      isShown: false,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: 0,
        isRequired: false,
      },
      isQuery: false,
      Query: {},
    },
  ],
};

export { meta };
