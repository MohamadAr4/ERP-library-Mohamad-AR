import PhFOperations, {
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
  PhFC_Text,
  PhFC_Autocomplete,
  PhFC_Select,
} from "../../../operation";
import BaseUrl from "../../../contants";

let meta = {
  hasTable: true,
  hasParent: true,
  id: "", //page id
  Generals: {
    title: "",
  },
  URLS: {
    New: {
      URl: `${BaseUrl}UC/Emp/SalariesCalculation/New`,
      Method: "POST",
    },
    Update: {
      URl: `${BaseUrl}UC/Emp/SalariesCalculation/`,
      Method: "PUT",
    },
    Delete: {
      URl: `${BaseUrl}UC/Emp/SalariesCalculation/`,
      Method: "DELETE",
    },
    Search: {
      URl: `${BaseUrl}UC/Emp/SalariesCalculation/Search/`,
      Method: "POST",
    },
    Get: {
      URl: `${BaseUrl}UC/Emp/SalariesCalculation/`,
      Method: "GET",
    },
  },
  Fields: [
    {
      label: "Year",
      element: "Nyear",
      rElement: "NyearName",
      second_element: "Nyear-second",
      field: "nyear",
      rField: "nyearName",
      type: "text",
      dataType: PhFC_Text,
      isShown: true,
      hasSecondField: true,
      isAutocomplete: false,
      isForm: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Text,
        Operation: "nyear", //must be unique
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
    {
      label: "Month",
      element: "nmonth",
      rElement: "nmonthName",
      second_element: "nmonth-second",
      field: "nmonth",
      rField: "nmonthName",
      type: "text",
      dataType: PhFC_Text,
      isShown: true,
      hasSecondField: true,
      isAutocomplete: false,
      isForm: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: PhFC_Text,
        Operation: "nmonth1", //must be unique
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue: PhFOper_EQ,
        tableWidth: "10",
      },
    },
  ],
  Column: [
    {
      title: "id",
      field: "statusId",
      visible: false,
      type: "hidden",
      component: "input",
      disable: false,
      defValue: 0,
      isAutocomplete: false,
    },
    {
      title: "Mst",
      field: "salId",
      visible: false,
      type: "hidden",
      component: "input",
      disable: false,
      defValue: 0,
      isAutocomplete: false,
    },
    {
      title: "Employee",
      field: "empId",
      rfield: "empName",
      inputClass:
        "form-control form-control-sm phcell ph-autocomplete ph-ac-accId accId cell-phTable-PhTable col-phTable-PhTable-9 ui-autocomplete-input",
      type: "text",
      isRequired: true,
      width: "300px",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      component: "input",
      isAutocomplete: true,
      disable: false,
      defValue: "",
      ajaxURL: "/UC/Emp/Employee/Autocomplete",
    },
    {
      title: "Dadd",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "dadd",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "110px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Nadd",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "nadd",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "110px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Wadd",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "wadd",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "110px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Hadd",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "hadd",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "140px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Nabs",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "nabs",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "75px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Nsik 70",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "nsik70",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "100px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Nsik 80",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "nsik80",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "100px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    } ,
    {
      title: "Ndel",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "ndel",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "100px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Nnpay",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "nnpay",
      isRequired: false,
      type: "text",
      datatype: "integer",
      width: "100px",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Rem",
      field: "rem",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  rem cell-phTable-PhTable col-phTable-PhTable-10",
      isRequired: false,
      type: "text",
      width: "300px",
      component: "input",
      disable: false,
      isAutocomplete: false,
      defValue: " ",
    }    
  ],
};

export { meta };
