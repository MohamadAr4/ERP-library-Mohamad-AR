import { type } from "@testing-library/user-event/dist/type";
import PhFOperations, {
  PhFOper_EQ,
  PhFOper_NE,
  PhFOper_GT,
  PhFOper_GE,
  PhFOper_LT,
  PhFOper_LE,
  PhFOper_BT,
  PhFOper_NB,
  PhFOper_ST,
  PhFOper_ED,
  PhFOper_CT,
  PhFOper_NST,
  PhFOper_NED,
  PhFOper_NCT,
} from "../../../operation";

const calculateLocalDebitSum = (rows) => {
  return rows.reduce((sum, row) => {
    const localDebitField = meta.Column.find((f) => f.field === "deb");
    if (localDebitField && row[localDebitField.field] !== undefined) {
      return sum + parseFloat(row[localDebitField.field]);
    }
    return sum;
  }, 0);
};
const balanceC = (rows) => {
  return rows.reduce((minus, row) => {
    const LDebitField = meta.Column.find((f) => f.field === "deb");
    const LCreditField = meta.Column.find((f) => f.field === "crd");

    if (LDebitField && row[LDebitField.field]!== undefined && LCreditField && row[LCreditField.field]!== undefined) {
      let a = parseFloat(row[LDebitField.field]);
      let b = parseFloat(row[LCreditField.field]);
      minus += a - b; // Accumulate the difference for each row
    }
    return minus;
  }, 0);
};
const calculateLocalCreditSum = (rows) => {
  return rows.reduce((sum, row) => {
    const localCreditField = meta.Column.find((f) => f.field === "crd");
    if (localCreditField && row[localCreditField.field] !== undefined) {
      row[localCreditField.footerValue] = sum + parseFloat(row[localCreditField.field]);
    }
    return sum;
  }, 0);
};
const balance = (rows) => {
  return rows.reduce((minus, row) => {
    const DebitField = meta.Column.find((f) => f.field === "debc");
    const CreditField = meta.Column.find((f) => f.field === "crdc");

    if (DebitField && row[DebitField.field]!== undefined && CreditField && row[CreditField.field]!== undefined) {
      let a = parseFloat(row[DebitField.field]);
      let b = parseFloat(row[CreditField.field]);
      minus += a - b; // Accumulate the difference for each row
    }
    return minus;
  }, 0);
};

let meta = {
  hasTable : true,
  hasParent: true,
  Generals: {
    title: "دليل المواد",
  },
  URLS: {
    New: { URl: "", Method: "POST" },
    Update: { URl: "", Method: "PUT" },
    Delete: { URl: "", Method: "DELETE" },
    Search: { URl: "", Method: "POST" },
    Get: { URl: "", Method: "GET" },
  },
  Fields: [
    {
      label: "Number",
      element: "fldNum",
      rElement: "fldNumName",
      field: "num",
      rField: "numName",
      type: "text",
      dataType: 0,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "3",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
    {
      label: "Print.Number",
      element: "fldPNum",
      rElement: "fldPNumName",
      field: "pnum",
      rField: "pnumName",
      type: "text",
      dataType: 0,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        disabled: true,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        autocomplete: false,
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "4",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
    {
      label: "Date",
      element: "fldDate",
      rElement: "fldDateName",
      field: "mdate",
      rField: "mdateName",
      type: "date",
      dataType: 3,
      isForm: true,
      isShown: true,
      Form: {
        maxDate : 'new Date()',
        minDate : '',
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: true,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 3,
        Operation: "5",
        options: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
    {
      label: "Document",
      element: "fldDocId",
      rElement: "fldDocIdName",
      field: "docId",
      rField: "docName",
      type: "select",
      dataType: 1,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        isAutocomplete: false,
        options: "doc",
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "1",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 1,
        Operation: "6",
        options: "doc",
        aOperations: [
          PhFOper_CT,
          PhFOper_NCT,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_ST,
          PhFOper_NST,
          PhFOper_ED,
          PhFOper_NED,
        ],
        defOperationValue : PhFOper_CT ,
        tableWidth: "10",
      },
    },
    {
      label: "his.Num",
      element: "fldDocNum",
      rElement: "fldDocNumName",
      field: "docn",
      rField: "docnName",
      type: "text",
      dataType: 1,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_label: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_label: "",
        },
        dataType: 1,
        Operation: "7",
        options: "",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_BT,
          PhFOper_NB,
          PhFOper_ST,
          PhFOper_ED,
          PhFOper_CT,
          PhFOper_NST,
          PhFOper_NED,
          PhFOper_NCT,
        ],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
    {
      label: "his.Date",
      element: "fldDocDate",
      rElement: "fldDocDateName",
      field: "docd",
      rField: "docdName",
      type: "date",
      dataType: 3,
      isForm: true,
      isShown: true,
      Form: {
        maxDate : '',
        minDate : '',
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_label: "",
        },
        defValue: "",
        isRequired: false,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_label: "",
        },
        dataType: 3,
        Operation: "7",
        options: "",
        aOperations: [
          PhFOper_GT,
          PhFOper_GE,
          PhFOper_LT,
          PhFOper_LE,
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_BT,
          PhFOper_NB,
        ],
        defOperationValue : PhFOper_GT ,
        tableWidth: "10",
      },
    },

    {
      label: "Rem",
      element: "fldRem",
      rElement: "rem",
      field: "rem",
      rField: "rem",
      type: "text",
      dataType: 0,
      isForm: true,
      isShown: true,
      Form: {
        labelClass: "col-sm-1 form-label ph-label text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        options: "sec3",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "",
        isRequired: true,
      },
      isQuery: true,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm col-sm",
        autocomplete: false,
        isRequired: false,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "8",
        options: "rem",
        aOperations: [
          PhFOper_EQ,
          PhFOper_ST,
          PhFOper_NE,
          PhFOper_NCT,
          PhFOper_NED,
          PhFOper_NST,
          PhFOper_CT,
          PhFOper_ED,
        ],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
    {
      element: "fldId",
      rElement: "fldIdName",
      field: "id",
      rField: "id",
      type: "hidden",
      dataType: 0,
      isForm: true,
      isShown: true,
      isAutocomplete: false,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        isAutocomplete: false,
        autocomplete: {
          data_label: "Name",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: "0",
        isRequired: true,
      },
      isQuery: false,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_label: "",
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "1",
        aOperations: [
          PhFOper_EQ,
          PhFOper_NE,
          PhFOper_NCT,
          PhFOper_NED,
          PhFOper_NST,
          PhFOper_CT,
          PhFOper_ED,
          PhFOper_ST,
        ],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
    {
      element: "fldSrcId",
      field: "srcId",
      rField: "srcIdName",
      type: "hidden",
      dataType: 0,
      isForm: true,
      isShown: true,
      Form: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-control form-control-sm ",
        isAutocomplete: false,
        options: "src",
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        defValue: 0,
        isRequired: false,
      },
      isQuery: false,
      Query: {
        labelClass:
          "col-sm-1 form-label ph-label text-start text-sm-end text-start text-sm-end",
        inputClass: "form-select form-select-sm",
        autocomplete: false,
        isRequired: true,
        value1: "",
        value2: "",
        isAutocomplete: false,
        autocomplete: {
          data_acrel: "",
          data_acoperation: "",
          data_params: "",
        },
        dataType: 0,
        Operation: "2",
        options: "status",
        aOperations: [PhFOper_EQ, PhFOper_NE],
        defOperationValue : PhFOper_EQ ,
        tableWidth: "10",
      },
    },
  ],
  Column: [
    {
      title: "id",
      field: "id",
      visible: false,
      type: "hidden",
      component: "input",
      disable: false,
      defValue: "",
      isAutocomplete: false,
    },
    {
      title: "MstId",
      field: "mstId",
      visible: false,
      type: "hidden",
      component: "input",
      disable: false,
      defValue: 0,
      isAutocomplete: false,
    },
    {
      title: "rId",
      field: "rid",
      type: "hidden",
      visible: false,
      component: "input",
      defValue: 0,
      disable: false,
      isAutocomplete: false,
    },
    {
      title: "ord",
      field: "ord",
      type: "hidden",
      visible: false,
      component: "input",
      defValue: 0,
      disable: false,
      isAutocomplete: false,
    },
    {
      title: "srem",
      field: "srem",
      visible: false,
      type: "hidden",
      component: "input",
      defValue: "",
      disable: false,
      isAutocomplete: false,
    },
    {
      title: "accrId",
      field: "accRid",
      visible: false,
      type: "hidden",
      component: "input",
      defValue: 0,
      disable: false,
      isAutocomplete: false,
    },
    {
      title: "Debit",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start debc cell-phTable-PhTable col-phTable-PhTable-7",
      type: "text",
      isRequired: true,
      //id: "head-phTable-PhTable-7",
      tabindex: "8",
      field: "debc",
      datatype: "decimal",
      width: "125px",
      aggregate: "sum",
      component: "input",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      footerValue : 0,
      isAutocomplete: false,
      callBack: {
        onchange: 'resetCorrespondingField',
      },
    },
    {
      title: "Credit",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start crdc cell-phTable-PhTable col-phTable-PhTable-8",
      //id: "head-phTable-PhTable-8",
      isRequired: true,
      type: "text",
      tabindex: "9",
      field: "crdc",
      datatype: "decimal",
      width: "125px",
      aggregate: "sum",
      component: "input",
      disable: false,
      required: true,
      defValue: '',
      classes: "text-start",
      footerValue : 0,
      isAutocomplete: false,
      callBack: {
        onchange: 'resetCorrespondingField',
      },
    },
    {
      title: "Account",
      //id: "head-phTable-PhTable-9",
      inputClass:
        "form-control form-control-sm phcell ph-autocomplete ph-ac-accId accId cell-phTable-PhTable col-phTable-PhTable-9 ui-autocomplete-input",
      type: "text",
      isRequired: true,
      tabindex: "10",
      field: "accId",
      rfield: "accName",
      width: "300px",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      aggregate: balance,
      component: "input",
      isAutocomplete: true,
      disable: false,
      required: true,
      defValue: "",
      defLabel: "",
      footerValue : 0,
      autocomplete: true,
      ajax: true,
      ajaxType: "POST",
      ajaxAsync: false,
      ajaxURL: "/UC/Acc/AccActive/Autocomplete",
    },
    {
      title: "Description",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  rem cell-phTable-PhTable col-phTable-PhTable-10",
      //id: "head-phTable-PhTable-10",
      isRequired: false,
      tabindex: "11",
      type: "text",
      field: "rem",
      width: "300px",
      component: "input",
      disable: false,
      isAutocomplete: false,
      defValue: " ",
    },
    {
      title: "Bank.Doc",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-select form-select-sm  tdocId cell-phTable-PhTable col-phTable-PhTable-11",
      //id: "head-phTable-PhTable-11",
      isRequired: false,
      tabindex: "12",
      type: "select",
      field: "tdocId",
      datatype: "integer",
      width: "250px",
      component: "select",
      options: "cur",
      disable: false,
      required: true,
      options: "aDoc",
      defValue: 0,
      isAutocomplete: false,
    },
    {
      title: "her.Num",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  tdocn cell-phTable-PhTable col-phTable-PhTable-12",
      field: "tdocn",
      isRequired: false,
      tabindex: "13",
      //id: "head-phTable-PhTable-12",
      type: "text",
      datatype: "integer",
      width: "125px",
      component: "input",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "her.Date",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell ph_datepicker tdocd cell-phTable-PhTable col-phTable-PhTable-13 hasDatepicker",
      isRequired: false,
      tabindex: "14",
      field: "tdocd",
      rField: "Rtdocd",
      //id: "head-phTable-PhTable-13",
      type: "text",
      width: "150px",
      datatype: "date",
      type:'date',
      component: "input",
      required: false,
      disable: false,
      isAutocomplete: false,
      defValue: "",
    },
    {
      title: "Cost.Center",
      //id: "head-phTable-PhTable-14",
      isRequired: false,
      tabindex: "15",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell ph-autocomplete ph-ac-costId costId cell-phTable-PhTable col-phTable-PhTable-14 ui-autocomplete-input",
      type: "autocomplete",
      field: "costId",
      rfield: "costName",
      width: "250px",
      component: "input",
      disable: false,
      required: true,
      defValue: 0,
      defLabel: "-",
      autocomplete: true,
      ajax: true,
      ajaxType: "POST",
      ajaxAsync: false,
      isAutocomplete: true,
      ajaxURL: "/UC/Acc/CostActive/Autocomplete",
    },
    {
      title: "Currency",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      tabindex: "16",
      isRequired: false,
      inputClass:
        "form-select form-select-sm  curnId cell-phTable-PhTable col-phTable-PhTable-15",
      type: "select",
      field: "curnId",
      //id: "head-phTable-PhTable-15",
      datatype: "integer",
      width: "100px",
      component: "select",
      disable: false,
      ajax: false,
      options: "aCurn",
      defValue: 1,
      isAutocomplete: false,
      callBack: {
        onchange: 'resetCorrespondingField',
      },
    },
    {
      title: "Rate",
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      tabindex: "17",
      isRequired: false,
      inputClass:
        "form-control form-control-sm phcell  text-start curnRate cell-phTable-PhTable col-phTable-PhTable-16",
      field: "curnRate",
      type: "text",
      //id: "head-phTable-PhTable-16",
      datatype: "decimal",
      width: "90px",
      // aggregate: 'balanceC',
      component: "input",
      disable: true,
      aggregate: balanceC,
      required: true,
      defValue: 1,
      footerValue : '',
      classes: "text-start",
      isAutocomplete: false,
    },
    {
      title: "Local.Debit",
      tabindex: "18",
      isRequired: false,
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start deb cell-phTable-PhTable col-phTable-PhTable-17",
      field: "deb",
      type: "text",
      //id: "head-phTable-PhTable-17",
      datatype: "decimal",
      width: "125px",
      aggregate: "sum",
      component: "input",
      disable: true,
      required: true,
      defValue: 0,
      classes: "text-start",
      footerValue : '',
      isAutocomplete: false,
      callBack : {
        onchange : calculateLocalDebitSum
      }
    },
    {
      title: "Local.Credit",
      tabindex: "19",
      isRequired: false,
      labelClass: "ph-table-col float-left border border-1 text-center p-1",
      inputClass:
        "form-control form-control-sm phcell  text-start crd cell-phTable-PhTable col-phTable-PhTable-18",
      field: "crd",
      type: "text",
      //id: "head-phTable-PhTable-18",
      datatype: "decimal",
      width: "125px",
      aggregate: "sum",
      component: "input",
      disable: true,
      required: true,
      defValue: 0,
      classes: "text-start",
      isAutocomplete: false,
      footerValue : '',
      callBack : {
        onchange : calculateLocalCreditSum
      }
    },
  ],
};

export { meta };
